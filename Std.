no.noise=rumore
fcut=frequenza di taglio 
vslider= primo modello di pomello 
I valori numerici di vlisder sono:
valore di inizializzaione
valore minimo 
valore massimo
step=precisione
order=ordine ;più aumenta l'ordine più il filtro è verticale,più l'ordine abbassa più il filtro è normale.
gain=regola il volume
filtro passaalto= fi.highpass
filtro passabasso=fi.lowpass
style knob= fa diventare il primo modello di pomello normale ad un pomello circolare
SCALE EXP= pomello esponenziale
Per trasfomare un filtro passabasso in un passabanda scrivi inizilamente il filtro passabasso tra parentesi order ,fcut 
poi due punti pi il filtro passaalto order ,fcut 
Prima di process va sempre scritto fcut e order
ogni riga deve terminare con ;
bug= significa che qualcosa non funziona bene, cioè che le persone ci "camminavano" dentro.
i filtri sono gli oggeti di base epr la sintesi
white noise=rumore bianco che ha tutte le frequenze e tutte le ampiezze
strumento che permette la visione completa delle cose è il microscopio
analisi di un corpo ossia l'analisi della struttura molecolare
Nello spettrogramma l'ampiezzza si muove sul dominio della frquenza
lo spettrogramma è una rappresentazione grafica del suono che si basa su effettive misurazioni del suono in funzione 
delle variabili.
Nel sonogramma la frequenza si muove sul dominio del tempo.
il sonogramma è una registrazione grafica fornita dal sonografo.
Nella forma d'onda ogni punto è osservabile sul dominio temporale.

//scrivi un programma che abbia un segnale elaborato da un filtro che elimini le frequenze superiori 666 Hz
import("stdfaust.lib");
fcut=666;
order=2;
process = fi.lowpass(order,fcut);
//scrivi un programma che abbia un segnale elaborato da un filtro che elimini le frequenze superiori 666 Hz,
trasfromando però il filtro in una banda udibile che va da 20 a 20000, non considerand le frequenze.
fcut=vslider("cut-off", 1000,20, 20000,1);
order=2;
process = fi.lowpass(order,fcut);
// prima lezione
import("stdfaust.lib");
process= no.noise : fi.lowpass(2,1000) : fi.highpass(2,1000) ;
// seconda lezione
import("stdfaust.lib");
sostituszione fcut=1000
process= no.noise : fi.lowpass(2,fcut) : fi.highpass(2,fcut) ;
// terza lezione
cut=vslider("cut-off", 1000,20, 20000,1) ;
process= no.noise : fi.lowpass(2,fcut) : fi.highpass(2,fcut) ;
//scrivi un programma che abbia un segnale elaborato da un filtro che elimini le frequenze superiori 666 Hz
import("stdfaust.lib");
fcut=vslider("[01] cut-off [scale:exp][style:knob]", 1000,20,20000,1) ;
order=128;
//                       init min max step
gain=vslider("[02] gain", -20, -96, 0, 0.1) : ba.db2linear ;
process=fi.lowpass(order,fcut) : fi.highpass(order,fcut) : *(gain) ;
